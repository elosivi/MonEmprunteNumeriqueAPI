package com.aubay.men.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class TransportProfilAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTransportProfilAllPropertiesEquals(TransportProfil expected, TransportProfil actual) {
        assertTransportProfilAutoGeneratedPropertiesEquals(expected, actual);
        assertTransportProfilAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTransportProfilAllUpdatablePropertiesEquals(TransportProfil expected, TransportProfil actual) {
        assertTransportProfilUpdatableFieldsEquals(expected, actual);
        assertTransportProfilUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTransportProfilAutoGeneratedPropertiesEquals(TransportProfil expected, TransportProfil actual) {
        assertThat(expected)
            .as("Verify TransportProfil auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTransportProfilUpdatableFieldsEquals(TransportProfil expected, TransportProfil actual) {
        assertThat(expected)
            .as("Verify TransportProfil relevant properties")
            .satisfies(e -> assertThat(e.getNbHebdo()).as("check nbHebdo").isEqualTo(actual.getNbHebdo()))
            .satisfies(e -> assertThat(e.getKmHebdo()).as("check kmHebdo").isEqualTo(actual.getKmHebdo()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTransportProfilUpdatableRelationshipsEquals(TransportProfil expected, TransportProfil actual) {
        assertThat(expected)
            .as("Verify TransportProfil relationships")
            .satisfies(e -> assertThat(e.getProfils()).as("check profils").isEqualTo(actual.getProfils()))
            .satisfies(e -> assertThat(e.getPrestations()).as("check prestations").isEqualTo(actual.getPrestations()))
            .satisfies(e -> assertThat(e.getTransports()).as("check transports").isEqualTo(actual.getTransports()));
    }
}
