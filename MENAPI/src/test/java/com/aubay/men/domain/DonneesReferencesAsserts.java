package com.aubay.men.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class DonneesReferencesAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDonneesReferencesAllPropertiesEquals(DonneesReferences expected, DonneesReferences actual) {
        assertDonneesReferencesAutoGeneratedPropertiesEquals(expected, actual);
        assertDonneesReferencesAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDonneesReferencesAllUpdatablePropertiesEquals(DonneesReferences expected, DonneesReferences actual) {
        assertDonneesReferencesUpdatableFieldsEquals(expected, actual);
        assertDonneesReferencesUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDonneesReferencesAutoGeneratedPropertiesEquals(DonneesReferences expected, DonneesReferences actual) {
        assertThat(expected)
            .as("Verify DonneesReferences auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDonneesReferencesUpdatableFieldsEquals(DonneesReferences expected, DonneesReferences actual) {
        assertThat(expected)
            .as("Verify DonneesReferences relevant properties")
            .satisfies(e -> assertThat(e.getLibelle()).as("check libelle").isEqualTo(actual.getLibelle()))
            .satisfies(e -> assertThat(e.getDonneeReference()).as("check donneeReference").isEqualTo(actual.getDonneeReference()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDonneesReferencesUpdatableRelationshipsEquals(DonneesReferences expected, DonneesReferences actual) {
        assertThat(expected)
            .as("Verify DonneesReferences relationships")
            .satisfies(e -> assertThat(e.getUnite()).as("check unite").isEqualTo(actual.getUnite()))
            .satisfies(e -> assertThat(e.getTemporalite()).as("check temporalite").isEqualTo(actual.getTemporalite()));
    }
}
