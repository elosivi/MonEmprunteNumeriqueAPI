package com.aubay.men.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PrestationAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPrestationAllPropertiesEquals(Prestation expected, Prestation actual) {
        assertPrestationAutoGeneratedPropertiesEquals(expected, actual);
        assertPrestationAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPrestationAllUpdatablePropertiesEquals(Prestation expected, Prestation actual) {
        assertPrestationUpdatableFieldsEquals(expected, actual);
        assertPrestationUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPrestationAutoGeneratedPropertiesEquals(Prestation expected, Prestation actual) {
        assertThat(expected)
            .as("Verify Prestation auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPrestationUpdatableFieldsEquals(Prestation expected, Prestation actual) {
        assertThat(expected)
            .as("Verify Prestation relevant properties")
            .satisfies(e -> assertThat(e.getNomPrestation()).as("check nomPrestation").isEqualTo(actual.getNomPrestation()))
            .satisfies(e -> assertThat(e.getNomUtilisateur()).as("check nomUtilisateur").isEqualTo(actual.getNomUtilisateur()))
            .satisfies(e -> assertThat(e.getNomMission()).as("check nomMission").isEqualTo(actual.getNomMission()))
            .satisfies(e -> assertThat(e.getNomClient()).as("check nomClient").isEqualTo(actual.getNomClient()))
            .satisfies(e -> assertThat(e.getEcUnite()).as("check ecUnite").isEqualTo(actual.getEcUnite()))
            .satisfies(e -> assertThat(e.getEcMensuelle()).as("check ecMensuelle").isEqualTo(actual.getEcMensuelle()))
            .satisfies(e -> assertThat(e.getEcTotale()).as("check ecTotale").isEqualTo(actual.getEcTotale()))
            .satisfies(e -> assertThat(e.getEcTransportMensuel()).as("check ecTransportMensuel").isEqualTo(actual.getEcTransportMensuel()))
            .satisfies(e -> assertThat(e.getEcFabMateriel()).as("check ecFabMateriel").isEqualTo(actual.getEcFabMateriel()))
            .satisfies(
                e -> assertThat(e.getEcUtilMaterielMensuel()).as("check ecUtilMaterielMensuel").isEqualTo(actual.getEcUtilMaterielMensuel())
            )
            .satisfies(e -> assertThat(e.getEcCommMensuel()).as("check ecCommMensuel").isEqualTo(actual.getEcCommMensuel()))
            .satisfies(e -> assertThat(e.getNbrProfils()).as("check nbrProfils").isEqualTo(actual.getNbrProfils()))
            .satisfies(e -> assertThat(e.getDureeMois()).as("check dureeMois").isEqualTo(actual.getDureeMois()))
            .satisfies(e -> assertThat(e.getDateDebut()).as("check dateDebut").isEqualTo(actual.getDateDebut()))
            .satisfies(e -> assertThat(e.getDateFin()).as("check dateFin").isEqualTo(actual.getDateFin()))
            .satisfies(e -> assertThat(e.getTypePresta()).as("check typePresta").isEqualTo(actual.getTypePresta()))
            .satisfies(e -> assertThat(e.getLieupresta()).as("check lieupresta").isEqualTo(actual.getLieupresta()))
            .satisfies(e -> assertThat(e.getDonneesSaisies()).as("check donneesSaisies").isEqualTo(actual.getDonneesSaisies()))
            .satisfies(e -> assertThat(e.getDonneesReperes()).as("check donneesReperes").isEqualTo(actual.getDonneesReperes()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPrestationUpdatableRelationshipsEquals(Prestation expected, Prestation actual) {
        assertThat(expected)
            .as("Verify Prestation relationships")
            .satisfies(e -> assertThat(e.getPrestationProfils()).as("check prestationProfils").isEqualTo(actual.getPrestationProfils()))
            .satisfies(e -> assertThat(e.getTransportProfils()).as("check transportProfils").isEqualTo(actual.getTransportProfils()))
            .satisfies(e -> assertThat(e.getDeplacementProfils()).as("check deplacementProfils").isEqualTo(actual.getDeplacementProfils()))
            .satisfies(e -> assertThat(e.getMaterielProfils()).as("check materielProfils").isEqualTo(actual.getMaterielProfils()));
    }
}
