package com.aubay.men.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class DeplacementProfilAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDeplacementProfilAllPropertiesEquals(DeplacementProfil expected, DeplacementProfil actual) {
        assertDeplacementProfilAutoGeneratedPropertiesEquals(expected, actual);
        assertDeplacementProfilAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDeplacementProfilAllUpdatablePropertiesEquals(DeplacementProfil expected, DeplacementProfil actual) {
        assertDeplacementProfilUpdatableFieldsEquals(expected, actual);
        assertDeplacementProfilUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDeplacementProfilAutoGeneratedPropertiesEquals(DeplacementProfil expected, DeplacementProfil actual) {
        assertThat(expected)
            .as("Verify DeplacementProfil auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDeplacementProfilUpdatableFieldsEquals(DeplacementProfil expected, DeplacementProfil actual) {
        assertThat(expected)
            .as("Verify DeplacementProfil relevant properties")
            .satisfies(e -> assertThat(e.getNbDeplacement()).as("check nbDeplacement").isEqualTo(actual.getNbDeplacement()))
            .satisfies(e -> assertThat(e.getKmPresta()).as("check kmPresta").isEqualTo(actual.getKmPresta()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDeplacementProfilUpdatableRelationshipsEquals(DeplacementProfil expected, DeplacementProfil actual) {
        assertThat(expected)
            .as("Verify DeplacementProfil relationships")
            .satisfies(e -> assertThat(e.getProfils()).as("check profils").isEqualTo(actual.getProfils()))
            .satisfies(e -> assertThat(e.getPrestations()).as("check prestations").isEqualTo(actual.getPrestations()))
            .satisfies(e -> assertThat(e.getTransports()).as("check transports").isEqualTo(actual.getTransports()));
    }
}
